@page "/registration"
@using Resursko.Domain.DTOs.Account
@inject NavigationManager NavManager;

<h3>Registration</h3>
@if (ShowRegistrationErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<EditForm Model="_registrationRequest" OnValidSubmit="Register" class="card card-body bg-light mt-5">
    <DataAnnotationsValidator />
   
    <div class="form-group row">
        <label for="text" class="col-md-2 col-form-label">First name:</label>
        <div class="col-md-10">
            <InputText id="firstName" class="form-control" @bind-Value="_registrationRequest.FirstName" />
            <ValidationMessage For="@(() => _registrationRequest.FirstName)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="text" class="col-md-2 col-form-label">Last name:</label>
        <div class="col-md-10">
            <InputText id="lastName" class="form-control" @bind-Value="_registrationRequest.LastName" />
            <ValidationMessage For="@(() => _registrationRequest.LastName)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="text" class="col-md-2 col-form-label">Username:</label>
        <div class="col-md-10">
            <InputText id="username" class="form-control" @bind-Value="_registrationRequest.Username" />
            <ValidationMessage For="@(() => _registrationRequest.Username)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="email" class="col-md-2 col-form-label">Email:</label>
        <div class="col-md-10">
            <InputText id="email" class="form-control" @bind-Value="_registrationRequest.Email" />
            <ValidationMessage For="@(() => _registrationRequest.Email)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="password" class="col-md-2 col-form-label">Password:</label>
        <div class="col-md-10">
            <InputText type="password" id="password" class="form-control" @bind-Value="_registrationRequest.Password" />
            <ValidationMessage For="@(() => _registrationRequest.Password)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="confirm" class="col-md-2 col-form-label">Confirm Password:</label>
        <div class="col-md-10">
            <InputText type="password" id="confirm" class="form-control" @bind-Value="_registrationRequest.ConfirmPassword" />
            <ValidationMessage For="@(() => _registrationRequest.ConfirmPassword)" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">Register</button>
        </div>
    </div>
</EditForm>


@code {
    private AccountRegistrationRequest _registrationRequest = new();
    public bool ShowRegistrationErrors { get; set; }
    public IEnumerable<string> Errors { get; set; }
    public async Task Register()
    {
        ShowRegistrationErrors = false;
        var result = await AccountService.Register(_registrationRequest);
        if (!result.IsSuccessful)
        {
            Errors = result.Errors!;
            ShowRegistrationErrors = true;
        }
        else
        {
            NavManager.NavigateTo("/");
        }
    }
}
